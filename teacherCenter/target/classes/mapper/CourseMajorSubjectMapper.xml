<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xue.dao.CourseMajorSubjectMapper" >
  <resultMap id="BaseResultMap" type="com.xue.model.CourseMajorSubject" >
    <id column="SUBJECT_ID" property="subjectId" jdbcType="VARCHAR" />
    <result column="SUBJECT_NAME" property="subjectName" jdbcType="VARCHAR" />
    <result column="MAJOR_ID" property="majorId" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="STUDY_SORT" property="studySort" jdbcType="INTEGER" />
    <result column="IS_DELETE" property="isDelete" jdbcType="VARCHAR" />
    <result column="IS_AIRONET" property="isAironet" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="DELETE_TIME" property="deleteTime" jdbcType="TIMESTAMP" />
    <result column="ORDER_BY" property="orderBy" jdbcType="INTEGER" /> 
    <result column="SUBJECT_TYPE" property="subjectType" jdbcType="INTEGER"/>
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR"/> 
  </resultMap>
  <sql id="Base_Column_List" >
    SUBJECT_ID, SUBJECT_NAME, MAJOR_ID, USER_ID, STUDY_SORT, IS_DELETE, IS_AIRONET, CREATE_TIME,  
    UPDATE_TIME, DELETE_TIME, ORDER_BY ,SUBJECT_TYPE,REMARKS 
  </sql>
  <select id="findAllByQuery" resultMap="BaseResultMap" parameterType="com.xue.vo.query.CourseMajorSubjectQuery" >
    select 
    <include refid="Base_Column_List" />
    from course_major_subject
  <where>
		<if test="majorId !=null and majorId != ''">  
	     	 AND MAJOR_ID =  #{majorId,jdbcType=VARCHAR} 
		</if>
			 AND IS_DELETE != 1 
	</where>
  
  </select>
  
  <select id="findAllByMajorQuery" resultMap="BaseResultMap" parameterType="com.xue.vo.query.CourseMajorSubjectQuery" >
    select 
    <include refid="Base_Column_List" />
    from course_major_subject
  <where>
		<if test="majorId !=null and majorId != ''">  
	     	 AND MAJOR_ID =  #{majorId,jdbcType=VARCHAR} 
		</if> 
	</where> 
  </select>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from course_major_subject
    where SUBJECT_ID = #{subjectId,jdbcType=VARCHAR}
  </select>
  
  <select id="findCourseMajorSubjectListByStudentId" resultMap="BaseResultMap" parameterType="java.lang.String">
      select  DISTINCT cms.SUBJECT_ID, cms.* from shop s
 inner join (select *from student_shop_set where STUDENT_ID= #{studentId,jdbcType=VARCHAR})sss on  s.shop_id= sss.shop_id
 inner join course_major_subject cms on s.MAJOR_ID=cms.MAJOR_ID and s.SUBJECT_ID=cms.SUBJECT_ID;
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from course_major_subject
    where SUBJECT_ID = #{subjectId,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insert" parameterType="com.xue.model.CourseMajorSubject" >
    insert into course_major_subject (SUBJECT_ID, SUBJECT_NAME, MAJOR_ID, 
      USER_ID, STUDY_SORT, IS_DELETE, 
      IS_AIRONET, CREATE_TIME, UPDATE_TIME, 
      DELETE_TIME, ORDER_BY, SUBJECT_TYPE, REMARKS)
    values (#{subjectId,jdbcType=VARCHAR}, #{subjectName,jdbcType=VARCHAR}, #{majorId,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{studySort,jdbcType=INTEGER}, #{isDelete,jdbcType=VARCHAR}, 
      #{isAironet,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{deleteTime,jdbcType=TIMESTAMP}, #{orderBy,jdbcType=INTEGER}, #{subjectType,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xue.model.CourseMajorSubject" >
    insert into course_major_subject
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="subjectId != null" >
        SUBJECT_ID,
      </if>
      <if test="subjectName != null" >
        SUBJECT_NAME,
      </if>
      <if test="majorId != null" >
        MAJOR_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="studySort != null" >
        STUDY_SORT,
      </if>
      <if test="isDelete != null" >
        IS_DELETE,
      </if>
      <if test="isAironet != null" >
        IS_AIRONET,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="deleteTime != null" >
        DELETE_TIME,
      </if>
      <if test="orderBy != null" > 
        ORDER_BY,
      </if>
      <if test="subjectType != null" >
        SUBJECT_TYPE,
      </if>
      <if test="remarks != null" >
        REMARKS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="subjectId != null" >
        #{subjectId,jdbcType=VARCHAR},
      </if>
      <if test="subjectName != null" >
        #{subjectName,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null" >
        #{majorId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="studySort != null" >
        #{studySort,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="isAironet != null" >
        #{isAironet,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteTime != null" >
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderBy != null" >
        #{orderBy,jdbcType=INTEGER},
      </if>
       <if test="subjectType != null" >
        #{subjectType,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
         #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xue.model.CourseMajorSubject" >
    update course_major_subject
    <set >
      <if test="subjectName != null" >
        SUBJECT_NAME = #{subjectName,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null" >
        MAJOR_ID = #{majorId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="studySort != null" >
        STUDY_SORT = #{studySort,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        IS_DELETE = #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="isAironet != null" >
        IS_AIRONET = #{isAironet,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteTime != null" >
        DELETE_TIME = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderBy != null" >
        ORDER_BY = #{orderBy,jdbcType=INTEGER},
      </if>
       <if test="subjectType != null" >
        SUBJECT_TYPE = #{subjectType,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        REMARKS = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where SUBJECT_ID = #{subjectId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xue.model.CourseMajorSubject" >
    update course_major_subject
    set SUBJECT_NAME = #{subjectName,jdbcType=VARCHAR},
      MAJOR_ID = #{majorId,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
      STUDY_SORT = #{studySort,jdbcType=INTEGER},
      IS_DELETE = #{isDelete,jdbcType=VARCHAR},
      IS_AIRONET = #{isAironet,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      DELETE_TIME = #{deleteTime,jdbcType=TIMESTAMP},
      ORDER_BY = #{orderBy,jdbcType=INTEGER},
      SUBJECT_TYPE = #{subjectType,jdbcType=INTEGER},
      REMARKS = #{remarks,jdbcType=INTEGER}
    where SUBJECT_ID = #{subjectId,jdbcType=VARCHAR}
  </update>
</mapper>