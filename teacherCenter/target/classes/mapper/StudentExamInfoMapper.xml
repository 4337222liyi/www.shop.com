<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xue.dao.StudentExamInfoMapper" >
  <resultMap id="BaseResultMap" type="com.xue.model.StudentExamInfo" >
    <id column="exam_id" property="examId" jdbcType="VARCHAR" />
    <result column="exam_subject" property="examSubject" jdbcType="VARCHAR" />
    <result column="exam_begin_time" property="examBeginTime" jdbcType="TIMESTAMP" />
    <result column="exam_end_time" property="examEndTime" jdbcType="TIMESTAMP" />
    <result column="exam_total_time" property="examTotalTime" jdbcType="VARCHAR" />
    <result column="exam_result" property="examResult" jdbcType="VARCHAR" />
    <result column="quest_num" property="questNum" jdbcType="INTEGER" />
    <result column="right_num" property="rightNum" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="REAL" />
    <result column="all_score" property="allScore" jdbcType="INTEGER" />
    <result column="ranking" property="ranking" jdbcType="INTEGER" />
    <result column="beat" property="beat" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="subject_id" property="subjectId" jdbcType="VARCHAR" />
    <result column="major_id" property="majorId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="PaperInfoResultMap" type="com.xue.model.PaperInfo" >
    <id column="paperId" property="paperid" jdbcType="INTEGER" />
    <result column="paperName" property="papername" jdbcType="VARCHAR" />
    <result column="paperType" property="papertype" jdbcType="VARCHAR" />
    <result column="totalNum" property="totalnum" jdbcType="INTEGER" />
    <result column="questionNum" property="questionnum" jdbcType="INTEGER" />
    <result column="anwserTime" property="anwsertime" jdbcType="INTEGER" />
    <result column="typeName" property="typename" jdbcType="VARCHAR" />
    <result column="radioSum" property="radiosum" jdbcType="INTEGER" />
    <result column="checkSum" property="checksum" jdbcType="INTEGER" />
    <result column="questionSum" property="questionsum" jdbcType="INTEGER" />
    <result column="questionTotalPoints" property="questiontotalpoints" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap type="com.xue.model.StudentHighScore" id="StudentHighScoreResultMap">
  		<result column="score" property="score" jdbcType="INTEGER" />
   		<result column="sourceType" property="sourceType" jdbcType="INTEGER" />
    	<result column="months" property="months" jdbcType="VARCHAR" />
  
  </resultMap>
  <resultMap id="StudentPaperResultMap" type="com.xue.model.StudentExamPapeInfo">
  		<association property="studentExamInfo" javaType="com.xue.model.StudentExamInfo" resultMap="BaseResultMap"></association>
  		<association property="paperInfo" javaType="com.xue.model.PaperInfo" resultMap="PaperInfoResultMap"></association>
  </resultMap>
  <sql id="Base_Column_List" >
    exam_id, exam_subject, exam_begin_time, exam_end_time, exam_total_time, exam_result, 
    quest_num, right_num, score, all_score, ranking, beat, status, multiple_score, radio_score, 
    subjective_score, paper_id, source_type, subject_id, major_id
  </sql>
   <select id="findPage" resultMap="BaseResultMap" parameterType="com.xue.vo.query.StudentExamInfoQuery" >
		SELECT esi.* FROM student_info si,student_exam_set ses,student_exam_info esi
		 WHERE ses.student_id = si.student_id 
		 AND esi.exam_id = ses.exam_id  
		 AND si.student_id= #{studentId,jdbcType=VARCHAR} 
		 AND esi.source_type =#{sourceType,jdbcType=INTEGER}
  </select>
  <!-- <select id="getStudentExamInfo" resultMap="BaseResultMap" parameterType="com.xue.vo.query.StudentExamInfoQuery" >
		SELECT esi.* FROM student_info si,student_exam_set ses,student_exam_info esi
		 WHERE ses.student_id = si.student_id 
		 AND si.student_id= #{studentId,jdbcType=VARCHAR} 
  </select> -->
  <select id="getStudentExamInfo" resultMap="StudentHighScoreResultMap" parameterType="com.xue.vo.query.StudentExamInfoQuery">
	 SELECT
		MAX(sei.score) AS score,
		DATE_FORMAT(sei.exam_begin_time, '%m') months,
		sei.source_type AS sourceType
	FROM
		student_exam_set ses,
		student_exam_info sei
	WHERE
		ses.exam_id = sei.exam_id
	AND ses.student_id = #{studentId,jdbcType=VARCHAR} AND sei.subject_id =#{examSubject,jdbcType=VARCHAR} AND sei.major_id =#{examResult,jdbcType=VARCHAR}
	AND sei.exam_begin_time BETWEEN date_sub(now(), INTERVAL 12 MONTH)
	AND now()
	GROUP BY
		months,
		sei.source_type
   </select>
   
    <select id="findByStudentId" resultMap="BaseResultMap" parameterType="com.xue.vo.query.StudentExamInfoQuery" >
		SELECT
			sei.*
		FROM
			student_exam_set ses
		INNER JOIN student_exam_info sei ON ses.exam_id = sei.exam_id
		AND ses.student_id = #{studentId,jdbcType=VARCHAR}
		INNER JOIN paperinfo p ON sei.paper_id = p.paperId
		AND p.paperId = #{paperId,jdbcType=INTEGER} ORDER BY sei.exam_begin_time DESC LIMIT 0,1
  </select>
   
    
   <select id="whetherPerformance" resultMap="StudentPaperResultMap" parameterType="com.xue.vo.query.StudentExamInfoQuery" >
		SELECT
			sei.*
		FROM
			student_exam_set ses
		INNER JOIN student_exam_info sei ON sei.paper_id = #{paperId,jdbcType=INTEGER}
		AND ses.student_id = #{studentId,jdbcType=VARCHAR} 
		AND ses.exam_id = sei.exam_id
		ORDER BY
			exam_begin_time DESC
  </select>
   
   <select id="findByExamId" resultMap="StudentPaperResultMap" parameterType="com.xue.vo.query.StudentExamInfoQuery" >
		select esi.*, pp.* from student_info si,student_exam_set ses,
		student_exam_info esi,
		paperinfo pp 
		WHERE ses.student_id = si.student_id 
		AND esi.exam_id = ses.exam_id 
		AND pp.paperId=esi.paper_id  
		AND si.student_id=#{studentId,jdbcType=VARCHAR} 
		AND esi.paper_id=#{paperId,jdbcType=INTEGER}
		AND esi.exam_id=#{examId,jdbcType=VARCHAR}
  </select>
  <select id="findExamChange" resultType="java.lang.Float" parameterType="com.xue.vo.query.StudentExamInfoQuery" >
		SELECT
			sei.score
		FROM
			student_exam_set ses
		INNER JOIN student_exam_info sei ON ses.exam_id = sei.exam_id
		AND ses.student_id = #{studentId,jdbcType=VARCHAR}
		INNER JOIN paperinfo p ON sei.paper_id = p.paperId
		AND p.paperId = #{paperId,jdbcType=INTEGER}
  </select>
  
   <select id="findAll" resultMap="BaseResultMap">
		 select 
   			 <include refid="Base_Column_List" />
    		from student_exam_info
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from student_exam_info
    where exam_id = #{examId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from student_exam_info
    where exam_id = #{examId,jdbcType=VARCHAR}
  </delete>
   <insert id="insert" parameterType="com.xue.model.StudentExamInfo" >
    insert into student_exam_info (exam_id, exam_subject, exam_begin_time, 
      exam_end_time, exam_total_time, exam_result, 
      quest_num, right_num, score, 
      all_score, ranking, beat, 
      status, multiple_score, radio_score, 
      subjective_score, paper_id, source_type, 
      subject_id, major_id)
    values (#{examId,jdbcType=VARCHAR}, #{examSubject,jdbcType=VARCHAR}, #{examBeginTime,jdbcType=TIMESTAMP}, 
      #{examEndTime,jdbcType=TIMESTAMP}, #{examTotalTime,jdbcType=VARCHAR}, #{examResult,jdbcType=VARCHAR}, 
      #{questNum,jdbcType=INTEGER}, #{rightNum,jdbcType=INTEGER}, #{score,jdbcType=REAL}, 
      #{allScore,jdbcType=INTEGER}, #{ranking,jdbcType=INTEGER}, #{beat,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{multipleScore,jdbcType=REAL}, #{radioScore,jdbcType=REAL}, 
      #{subjectiveScore,jdbcType=REAL}, #{paperId,jdbcType=INTEGER}, #{sourceType,jdbcType=INTEGER}, 
      #{subjectId,jdbcType=VARCHAR}, #{majorId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xue.model.StudentExamInfo" >
    insert into student_exam_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="examId != null" >
        exam_id,
      </if>
      <if test="examSubject != null" >
        exam_subject,
      </if>
      <if test="examBeginTime != null" >
        exam_begin_time,
      </if>
      <if test="examEndTime != null" >
        exam_end_time,
      </if>
      <if test="examTotalTime != null" >
        exam_total_time,
      </if>
      <if test="examResult != null" >
        exam_result,
      </if>
      <if test="questNum != null" >
        quest_num,
      </if>
      <if test="rightNum != null" >
        right_num,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="allScore != null" >
        all_score,
      </if>
      <if test="ranking != null" >
        ranking,
      </if>
      <if test="beat != null" >
        beat,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="multipleScore != null" >
        multiple_score,
      </if>
      <if test="radioScore != null" >
        radio_score,
      </if>
      <if test="subjectiveScore != null" >
        subjective_score,
      </if>
      <if test="paperId != null" >
        paper_id,
      </if>
      <if test="sourceType != null" >
        source_type,
      </if>
      <if test="subjectId != null" >
        subject_id,
      </if>
      <if test="majorId != null" >
        major_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="examId != null" >
        #{examId,jdbcType=VARCHAR},
      </if>
      <if test="examSubject != null" >
        #{examSubject,jdbcType=VARCHAR},
      </if>
      <if test="examBeginTime != null" >
        #{examBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examEndTime != null" >
        #{examEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examTotalTime != null" >
        #{examTotalTime,jdbcType=VARCHAR},
      </if>
      <if test="examResult != null" >
        #{examResult,jdbcType=VARCHAR},
      </if>
      <if test="questNum != null" >
        #{questNum,jdbcType=INTEGER},
      </if>
      <if test="rightNum != null" >
        #{rightNum,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=REAL},
      </if>
      <if test="allScore != null" >
        #{allScore,jdbcType=INTEGER},
      </if>
      <if test="ranking != null" >
        #{ranking,jdbcType=INTEGER},
      </if>
      <if test="beat != null" >
        #{beat,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="multipleScore != null" >
        #{multipleScore,jdbcType=REAL},
      </if>
      <if test="radioScore != null" >
        #{radioScore,jdbcType=REAL},
      </if>
      <if test="subjectiveScore != null" >
        #{subjectiveScore,jdbcType=REAL},
      </if>
      <if test="paperId != null" >
        #{paperId,jdbcType=INTEGER},
      </if>
      <if test="sourceType != null" >
        #{sourceType,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null" >
        #{subjectId,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null" >
        #{majorId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
 <update id="updateByPrimaryKeySelective" parameterType="com.xue.model.StudentExamInfo" >
    update student_exam_info
    <set >
      <if test="examSubject != null" >
        exam_subject = #{examSubject,jdbcType=VARCHAR},
      </if>
      <if test="examBeginTime != null" >
        exam_begin_time = #{examBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examEndTime != null" >
        exam_end_time = #{examEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examTotalTime != null" >
        exam_total_time = #{examTotalTime,jdbcType=VARCHAR},
      </if>
      <if test="examResult != null" >
        exam_result = #{examResult,jdbcType=VARCHAR},
      </if>
      <if test="questNum != null" >
        quest_num = #{questNum,jdbcType=INTEGER},
      </if>
      <if test="rightNum != null" >
        right_num = #{rightNum,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=REAL},
      </if>
      <if test="allScore != null" >
        all_score = #{allScore,jdbcType=INTEGER},
      </if>
      <if test="ranking != null" >
        ranking = #{ranking,jdbcType=INTEGER},
      </if>
      <if test="beat != null" >
        beat = #{beat,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="multipleScore != null" >
        multiple_score = #{multipleScore,jdbcType=REAL},
      </if>
      <if test="radioScore != null" >
        radio_score = #{radioScore,jdbcType=REAL},
      </if>
      <if test="subjectiveScore != null" >
        subjective_score = #{subjectiveScore,jdbcType=REAL},
      </if>
      <if test="paperId != null" >
        paper_id = #{paperId,jdbcType=INTEGER},
      </if>
      <if test="sourceType != null" >
        source_type = #{sourceType,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null" >
        subject_id = #{subjectId,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null" >
        major_id = #{majorId,jdbcType=VARCHAR},
      </if>
    </set>
    where exam_id = #{examId,jdbcType=VARCHAR}
  </update>
   <update id="updateByPrimaryKey" parameterType="com.xue.model.StudentExamInfo" >
    update student_exam_info
    set exam_subject = #{examSubject,jdbcType=VARCHAR},
      exam_begin_time = #{examBeginTime,jdbcType=TIMESTAMP},
      exam_end_time = #{examEndTime,jdbcType=TIMESTAMP},
      exam_total_time = #{examTotalTime,jdbcType=VARCHAR},
      exam_result = #{examResult,jdbcType=VARCHAR},
      quest_num = #{questNum,jdbcType=INTEGER},
      right_num = #{rightNum,jdbcType=INTEGER},
      score = #{score,jdbcType=REAL},
      all_score = #{allScore,jdbcType=INTEGER},
      ranking = #{ranking,jdbcType=INTEGER},
      beat = #{beat,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      multiple_score = #{multipleScore,jdbcType=REAL},
      radio_score = #{radioScore,jdbcType=REAL},
      subjective_score = #{subjectiveScore,jdbcType=REAL},
      paper_id = #{paperId,jdbcType=INTEGER},
      source_type = #{sourceType,jdbcType=INTEGER},
      subject_id = #{subjectId,jdbcType=VARCHAR},
      major_id = #{majorId,jdbcType=VARCHAR}
    where exam_id = #{examId,jdbcType=VARCHAR}
  </update>
  
    <select id = "selectEntityPage" resultMap="BaseResultMap"  parameterType="com.xue.model.StudentExamInfo">
  	   select * from student_exam_set 
  </select>
</mapper>