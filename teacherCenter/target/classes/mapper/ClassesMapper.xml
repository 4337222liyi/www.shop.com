<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xue.dao.ClassesMapper" >
  <resultMap id="BaseResultMap" type="com.xue.model.Classes" >
    <id column="CLASSES_ID" property="classesId" jdbcType="VARCHAR" />
    <result column="CLASSES_NAME" property="classesName" jdbcType="VARCHAR" />
    <result column="PEMARK" property="pemark" jdbcType="VARCHAR" />
    <result column="PARENT_ID" property="parentId" jdbcType="VARCHAR" />
    <result column="IS_QUICK_APPLY" property="isQuickApply" jdbcType="VARCHAR" />
    <result column="IS_DEL" property="isDel" jdbcType="VARCHAR" />
    <result column="ORDER_BY" property="orderBy" jdbcType="VARCHAR" />
    <result column="CLASSES_TYPE" property="classesType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    CLASSES_ID, CLASSES_NAME, PEMARK, PARENT_ID, IS_QUICK_APPLY, IS_DEL, ORDER_BY, CLASSES_TYPE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from classes
    where CLASSES_ID = #{classesId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from classes
    where CLASSES_ID = #{classesId,jdbcType=VARCHAR}
  </delete>
  <select id="findClassByDetailId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    SELECT
	c.*
	FROM
		classes c,
		shop_detail sd,
		shop_detail_classes_set sdcs
	WHERE
		sdcs.classes_id = c.CLASSES_ID
	AND sdcs.detail_id = sd.detail_id
	AND sd.detail_id =#{detailId,jdbcType=VARCHAR}
  </select>
  
  <select id="findAllClassBySubjectId" resultMap="BaseResultMap" parameterType="java.lang.String">
     select *From classes c
     inner join course_major_subject_classes_set cmscs
     on c.classes_Id = cmscs.class_id where subject_id=#{subjectId,jdbcType=VARCHAR}
  </select>
  
  <select id="getClassesByMajor" resultMap="BaseResultMap" parameterType="java.lang.String">
        select DISTINCT c.classes_id,c.classes_name,c.pemark,c.parent_id,c.is_quick_apply,c.is_del,c.order_by,c.classes_type from classes c inner JOIN 
  (select *from shop  where MAJOR_ID=#{majorId,jdbcType=VARCHAR}) s on c.classes_id = s.classes_id ;
  </select>
  
  <insert id="insert" parameterType="com.xue.model.Classes" >
    insert into classes (CLASSES_ID, CLASSES_NAME, PEMARK, 
      PARENT_ID, IS_QUICK_APPLY, IS_DEL, 
      ORDER_BY, CLASSES_TYPE)
    values (#{classesId,jdbcType=VARCHAR}, #{classesName,jdbcType=VARCHAR}, #{pemark,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=VARCHAR}, #{isQuickApply,jdbcType=VARCHAR}, #{isDel,jdbcType=VARCHAR}, 
      #{orderBy,jdbcType=VARCHAR}, #{classesType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xue.model.Classes" >
    insert into classes
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="classesId != null" >
        CLASSES_ID,
      </if>
      <if test="classesName != null" >
        CLASSES_NAME,
      </if>
      <if test="pemark != null" >
        PEMARK,
      </if>
      <if test="parentId != null" >
        PARENT_ID,
      </if>
      <if test="isQuickApply != null" >
        IS_QUICK_APPLY,
      </if>
      <if test="isDel != null" >
        IS_DEL,
      </if>
      <if test="orderBy != null" >
        ORDER_BY,
      </if>
       <if test="classesType != null" >
        CLASSES_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="classesId != null" >
        #{classesId,jdbcType=VARCHAR},
      </if>
      <if test="classesName != null" >
        #{classesName,jdbcType=VARCHAR},
      </if>
      <if test="pemark != null" >
        #{pemark,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="isQuickApply != null" >
        #{isQuickApply,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=VARCHAR},
      </if>
      <if test="orderBy != null" >
        #{orderBy,jdbcType=VARCHAR},
      </if>
      <if test="classesType != null" >
        #{classesType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xue.model.Classes" >
    update classes
    <set >
      <if test="classesName != null" >
        CLASSES_NAME = #{classesName,jdbcType=VARCHAR},
      </if>
      <if test="pemark != null" >
        PEMARK = #{pemark,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        PARENT_ID = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="isQuickApply != null" >
        IS_QUICK_APPLY = #{isQuickApply,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        IS_DEL = #{isDel,jdbcType=VARCHAR},
      </if>
      <if test="orderBy != null" >
        ORDER_BY = #{orderBy,jdbcType=VARCHAR},
      </if>
      <if test="classesType != null" >
        CLASSES_TYPE = #{classesType,jdbcType=INTEGER},
      </if>
    </set>
    where CLASSES_ID = #{classesId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xue.model.Classes" >
    update classes
    set CLASSES_NAME = #{classesName,jdbcType=VARCHAR},
      PEMARK = #{pemark,jdbcType=VARCHAR},
      PARENT_ID = #{parentId,jdbcType=VARCHAR},
      IS_QUICK_APPLY = #{isQuickApply,jdbcType=VARCHAR},
      IS_DEL = #{isDel,jdbcType=VARCHAR},
      ORDER_BY = #{orderBy,jdbcType=VARCHAR},
      CLASSES_TYPE = #{classesType,jdbcType=INTEGER},
    where CLASSES_ID = #{classesId,jdbcType=VARCHAR}
  </update>
</mapper>