<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xue.dao.BsUserPayInfoMapper" >
  <resultMap id="BaseResultMap" type="com.xue.model.BsUserPayInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="pay_money" property="payMoney" jdbcType="INTEGER" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="pay_cause" property="payCause" jdbcType="VARCHAR" />
    <result column="pay_user_id" property="payUserId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, pay_money, pay_time, pay_cause, pay_user_id
  </sql>
  <select id="findAnnualConsumption" resultType="java.lang.Integer" parameterType="java.lang.String">
	    SELECT
			SUM(pay_money)
		FROM
			bs_user_pay_info
		WHERE
			DATE_SUB(CURDATE(), INTERVAL 365 DAY) &lt;= date(pay_time) AND pay_user_id=#{userId,jdbcType=VARCHAR}
  </select>
  <select id="findUserPayInfo" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bs_user_pay_info
    where pay_user_id = #{userId,jdbcType=VARCHAR} 
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bs_user_pay_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bs_user_pay_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xue.model.BsUserPayInfo" >
    insert into bs_user_pay_info (id, pay_money, pay_time, 
      pay_cause, pay_user_id)
    values (#{id,jdbcType=INTEGER}, #{payMoney,jdbcType=INTEGER}, #{payTime,jdbcType=TIMESTAMP}, 
      #{payCause,jdbcType=VARCHAR}, #{payUserId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xue.model.BsUserPayInfo" >
    insert into bs_user_pay_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="payMoney != null" >
        pay_money,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="payCause != null" >
        pay_cause,
      </if>
      <if test="payUserId != null" >
        pay_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="payMoney != null" >
        #{payMoney,jdbcType=INTEGER},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payCause != null" >
        #{payCause,jdbcType=VARCHAR},
      </if>
      <if test="payUserId != null" >
        #{payUserId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xue.model.BsUserPayInfo" >
    update bs_user_pay_info
    <set >
      <if test="payMoney != null" >
        pay_money = #{payMoney,jdbcType=INTEGER},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payCause != null" >
        pay_cause = #{payCause,jdbcType=VARCHAR},
      </if>
      <if test="payUserId != null" >
        pay_user_id = #{payUserId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xue.model.BsUserPayInfo" >
    update bs_user_pay_info
    set pay_money = #{payMoney,jdbcType=INTEGER},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_cause = #{payCause,jdbcType=VARCHAR},
      pay_user_id = #{payUserId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>