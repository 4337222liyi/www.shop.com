<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xue.dao.StudentPlanLogMapper" >
  <resultMap id="BaseResultMap" type="com.xue.model.StudentPlanLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="student_id" property="studentId" jdbcType="VARCHAR" />
    <result column="student_name" property="studentName" jdbcType="VARCHAR" />
    <result column="action_name" property="actionName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="plan_id" property="planId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, student_id, student_name, action_name, create_time, plan_id
  </sql>
  <select id="getStudentPlanLog" resultMap="BaseResultMap" parameterType="com.xue.vo.query.StudentPlanLogQuery" >
    select 
    <include refid="Base_Column_List" />
    from student_plan_log
    <where>
		<if test="studentId !=null and studentId != ''">  
	     	 AND student_id =  #{studentId,jdbcType=VARCHAR}
		</if> 
		<if test="planId !=null and planId != ''">  
	     	 AND plan_id =  #{planId,jdbcType=INTEGER}
		</if> 
	</where>
	order by create_time desc limit 0,5
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from student_plan_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from student_plan_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xue.model.StudentPlanLog" >
    insert into student_plan_log (student_id, student_name, 
      action_name, create_time, plan_id
      )
    values (#{studentId,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, 
      #{actionName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{planId,jdbcType=INTEGER}
      )
      <selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="id">
			select last_insert_id()
	  </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.xue.model.StudentPlanLog" >
    insert into student_plan_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="studentName != null" >
        student_name,
      </if>
      <if test="actionName != null" >
        action_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="planId != null" >
        plan_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="actionName != null" >
        #{actionName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planId != null" >
        #{planId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xue.model.StudentPlanLog" >
    update student_plan_log
    <set >
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="actionName != null" >
        action_name = #{actionName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planId != null" >
        plan_id = #{planId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xue.model.StudentPlanLog" >
    update student_plan_log
    set student_id = #{studentId,jdbcType=VARCHAR},
      student_name = #{studentName,jdbcType=VARCHAR},
      action_name = #{actionName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      plan_id = #{planId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>